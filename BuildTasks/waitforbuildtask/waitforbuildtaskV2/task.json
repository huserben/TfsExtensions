{
    "id": "511a5e02-cdfe-420d-96b5-a2251ddaf6fb",
    "name": "WaitForBuildToFinish",
    "friendlyName": "Wait For Build(s) to finish",
    "description": "This tasks will wait for builds that were triggered using the Trigger Build Task to finish. This Tasks requires that at least one TriggerBuildTask was run before and has set the storeVariable flag to true.",
    "helpMarkDown": "",
    "category": "Build",
	"visibility": [
		"Build"
		],
    "author": "Benjamin Huser",
	"version": {
		"Major": 2,
		"Minor": 2,
		"Patch": 1
	},
	"instanceNameFormat": "Waiting for Builds to finish",
    "groups": [
		{
			"name": "basicConfiguration",
			"displayName": "Configuration",
			"isExpanded": true
		},
		{
			"name": "authenticationOptions",
			"displayName": "Authentication",
			"isExpanded": true
		}
	],
	"inputs": [
		{
			"name":  "definitionIsInCurrentTeamProject",
			"type":  "boolean",
			"label":  "True if the build to be triggered is defined within the same team project as this build",
			"defaultValue":  true,
			"required":  true,
			"helpMarkDown": "If set to false, the server, collection and Team Project to use must be entered manually. This is needed if you want to point to a different server, collection or team project on the same server.",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "tfsServer",
			"type":  "string",
			"label":  "URL to TFS Server (including Collection)",
			"defaultValue":  "",
			"required":  true,
			"visibleRule": "definitionIsInCurrentTeamProject = false",
			"helpMarkDown":  "The server the build you want to trigger is located including the collection and team project.  Example: https://myVSTSAccount.visualstudio.com/DefaultCollection or https://www.myOnPremTfs.com/MyCollection",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "teamProject",
			"type":  "string",
			"label":  "Team Project",
			"defaultValue":  "",
			"required":  true,
			"visibleRule": "definitionIsInCurrentTeamProject = false",
			"helpMarkDown":  "The Team Project the build you want to trigger is in.",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "ignoreSslCertificateErrors",
			"type":  "boolean",
			"label":  "Ignore SSL Certificate Errors",
			"defaultValue":  false,
			"required":  true,
			"helpMarkDown":  "When enabled possible certificate errors (for example untrusted CA's) will be ignored",
			"groupName":  "basicConfiguration"
		},		
		{
			"name":  "waitForQueuedBuildsToFinishRefreshTime",
			"type":  "string",
			"label":  "Time (in seconds) to wait between checks for the build",
			"defaultValue":  60,
			"required":  true,
			"helpMarkDown":  "This value defines how often the tasks checks if the triggered builds are completed already",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "failTaskIfBuildsNotSuccessful",
			"type":  "boolean",
			"label":  "Fail the build if the tasks were not successful",
			"defaultValue":  true,
			"required":  true,
			"helpMarkDown":  "Fails this build if one of the triggered tasks was not successful",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "cancelBuildsIfAnyFails",
			"type":  "boolean",
			"label":  "Cancel all awaited builds if any of them failed ",
			"defaultValue":  false,
			"required":  true,
			"visibleRule": "failTaskIfBuildsNotSuccessful = true",
			"helpMarkDown":  "This switch defines whether the task should attempt to cancel all awaited builds if any of the failed.",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "treatPartiallySucceededBuildAsSuccessful",
			"type":  "boolean",
			"label":  "Treat a Partially Succeeded Build as Successful",
			"defaultValue":  false,
			"required":  true,
			"visibleRule": "failTaskIfBuildsNotSuccessful = true",
			"helpMarkDown":  "If enabled the task won't fail if the awaited build was partially successful.",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "downloadBuildArtifacts",
			"type":  "boolean",
			"label":  "Download Build Artifacts",
			"defaultValue":  false,
			"required":  true,
			"visibleRule": "failTaskIfBuildsNotSuccessful = true",
			"helpMarkDown":  "Will download the build artifacts of the triggered builds (if available) and will store it on the build agent for further processing.",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "dropDirectory",
			"type":  "string",
			"label":  "Drop Directory",
			"defaultValue":  "$(agent.workFolder)",
			"required":  false,
			"visibleRule": "downloadBuildArtifacts = true",
			"helpMarkDown":  "Directory where the artifacts should be downloaded to. Variables can be used - e.g. $(agent.workFolder)",
			"groupName":  "basicConfiguration"
		},
		{
			"name":  "clearVariable",
			"type":  "boolean",
			"label":  "Clear TriggeredBuildIds variable after Task",
			"defaultValue":  true,
			"required":  true,
			"helpMarkDown":  "When set to true, the TriggeredBuildIds variable used as input will be cleared.",
			"groupName":  "basicConfiguration"
		},
		{
			"name": "authenticationMethod",
			"type": "pickList",
			"label": "Authentication Method",
            "required": true,
            "groupName": "authenticationOptions",
            "defaultValue": "Personal Access Token",
            "helpMarkDown": "Select your method of authentication.",
            "options": {
				"OAuth Token": "OAuth Token",
                "Personal Access Token": "Personal Access Token",
                "Basic Authentication": "Basic Authentication"
				}
		},
		{
			"name":  "username",
			"type":  "string",
			"label":  "The username that shall be used to authenticate if basic authentication is used",
			"defaultValue":  "",
			"required":  false,
			"visibleRule": "authenticationMethod = Basic Authentication",
			"groupName":  "authenticationOptions"
		},
		{
			"name":  "password",
			"type":  "string",
			"label":  "The password, Personal Access Token or OAuth Token to authenticate",
			"defaultValue":  "",
			"required":  false,
			"helpMarkDown": "The password or Personal Access Token. Ideally use a (secret) variable here instead putting it in plaintext. Variables can be referenced with the following syntax: $(myToken). If OAuth Authentication is used, leaving this empty will try to use the System.AccessToken - make sure to enable this build to allow scripts to access the token in the options! Please check out the [documentation](https://github.com/huserben/TfsExtensions/blob/master/BuildTasks/overview.md#authentication-options) in case you have problems.",
			"visibleRule": "authenticationMethod != Default Credentials",
			"groupName":  "authenticationOptions"
		}
	],	
    "execution": {
        "Node": {
            "target": "index.js",
			"argumentFormat":  "",
			"workingDirectory":  "$(currentDirectory)"
        }
    }
}